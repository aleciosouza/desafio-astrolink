{"version":3,"sources":["repository/GithubRepository.js","service/GithubService.js","components/user-search-form/UserSearchForm.js","components/header-user/HeaderUser.js","components/card-repo/CardRepo.js","components/repo-list/RepoList.js","components/utils/button/floating-button/FloatingButton.js","components/repo-list/repo-list-controller/RepoListController.js","App.js","index.js"],"names":["GitHubRepository","this","http","axios","create","baseURL","timeout","headers","username","get","GitHubService","repository","Promise","resolve","reject","a","getUser","data","getReposByUser","repos","user","id","login","avatar_url","followers","following","bio","email","map","repo","name","description","stargazers_count","language","svn_url","sort","b","error","test","length","UserSearchForm","props","onChangeHandler","event","value","target","setState","onSubmitHandler","state","service","validateUsername","onUserChanged","preventDefault","className","data-testid","onSubmit","placeholder","minLength","maxLength","onChange","type","onClick","React","Component","HeaderUser","imgAlt","src","alt","aria-label","CardRepo","href","rel","RepoList","cardRepoList","key","Fragment","FloatingButton","icon","text","onClickHandler","RepoListController","filter","changeOrdenationHandler","PureComponent","App","gitHubPromise","then","response","catch","e","changeOrdenation","newFilter","order","newRepos","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ubAsBeA,EApBf,WAEI,aAAe,oBACXC,KAAKC,KAAOC,IAAMC,OAAO,CACrBC,QAAS,0BACTC,QAAS,IACTC,QAAS,CAAE,eAAgB,sBANvC,oDAUYC,GACJ,OAAOP,KAAKC,KAAKO,IAAV,gBAAuBD,MAXtC,qCAcmBA,GACX,OAAOP,KAAKC,KAAKO,IAAV,gBAAuBD,EAAvB,eAff,KC4EeE,E,WA1EX,aAAe,oBACXT,KAAKU,WAAa,IAAIX,E,6FAGZQ,G,qGACH,IAAII,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,mBAAAC,EAAA,+EAEY,EAAKJ,WAAWK,QAAQR,GAFpC,uBAEHS,EAFG,EAEHA,KAFG,SAGS,EAAKC,eAAeV,GAH7B,OAGLW,EAHK,OAIXN,EAAQ,CACJO,KAAM,CACFC,GAAIJ,EAAKI,GACTC,MAAOL,EAAKK,MACZC,WAAYN,EAAKM,WACjBC,UAAWP,EAAKO,UAChBC,UAAWR,EAAKQ,UAChBC,IAAKT,EAAKS,IACVC,MAAOV,EAAKU,OAEhBR,MAAOA,IAdA,kDAiBXL,EAAO,EAAD,IAjBK,0DAAZ,0D,gLAsBUN,G,qGACV,IAAII,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,mBAAAC,EAAA,+EAEY,EAAKJ,WAAWO,eAAeV,GAF3C,gBAEHS,EAFG,EAEHA,KAEFE,EAAQF,EAAKW,KAAI,SAAAC,GACnB,MAAO,CACHR,GAAIQ,EAAKR,GACTS,KAAMD,EAAKC,KACXC,YAAaF,EAAKE,YAClBC,iBAAkBH,EAAKG,iBACvBC,SAAUJ,EAAKI,SACfC,QAASL,EAAKK,YAEnBC,MAAK,SAACpB,EAAGqB,GACR,OAAQrB,EAAEiB,iBAAmBI,EAAEJ,iBAAoB,GAAK,KAG5DnB,EAAQM,GAjBG,gDAmBXL,EAAO,EAAD,IAnBK,yDAAZ,0D,yIAwBMN,GACb,IAEI6B,EAAQ,KAcZ,MAhBY,2CACMC,KAAK9B,KAOf6B,EAHC7B,EAEMA,EAAS+B,OAAS,GACjB,4DACe,MAAhB/B,EAAS,GACR,4DAEA,gEANA,yBAUT6B,M,KCfAG,E,kDApDX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAYVC,gBAAkB,SAACC,GAAW,IAClBC,EAAUD,EAAME,OAAhBD,MACR,EAAKE,SAAS,CAAEtC,SAAUoC,KAfX,EAkBnBG,gBAAkB,SAACJ,GAAW,IAClBnC,EAAa,EAAKwC,MAAlBxC,SACF6B,EAAQ,EAAKY,QAAQC,iBAAiB1C,GAEvC6B,GACD,EAAKI,MAAMU,cAAc,EAAKF,QAAQjC,QAAQR,IAGlD,EAAKsC,SAAS,CAAET,MAAOA,IAEvBM,EAAMS,kBA1BN,EAAKJ,MAAQ,CACTxC,SAAU,GACVY,KAAM,KACNiB,MAAO,MALI,E,gEAUfpC,KAAKgD,QAAU,IAAIvC,I,+BAqBb,IACE2B,EAAUpC,KAAK+C,MAAfX,MACR,OACI,yBAAKgB,UAAU,iBAAiBC,cAAY,kBACxC,0BAAMC,SAAUtD,KAAK8C,iBACjB,yBAAKM,UAAU,eACX,2BAAOvB,KAAK,aAAa0B,YAAY,aAAUH,UAAU,aACrDI,UAAU,IAAIC,UAAU,KAAKJ,cAAY,oBACzCK,SAAU1D,KAAKyC,kBACnB,4BAAQkB,KAAK,SAASP,UAAU,WAAWC,cAAY,iBACnDO,QAAS5D,KAAK8C,iBADlB,WAKHV,GAAS,2BAAOgB,UAAU,QAAQC,cAAY,gBAAgBjB,S,GA/CtDyB,IAAMC,WC0BpBC,G,6KAzBD,IAAD,EAC2D/D,KAAKwC,MAAMrB,KAAnEE,EADH,EACGA,MAAOC,EADV,EACUA,WAAYC,EADtB,EACsBA,UAAWC,EADjC,EACiCA,UAAWC,EAD5C,EAC4CA,IAAKC,EADjD,EACiDA,MAEhDsC,EAAM,uCAAgC3C,GAE5C,OACI,yBAAK+B,UAAU,+BACV9B,GAAc,yBAAK2C,IAAK3C,EAAY4C,IAAKF,EAAQX,cAAY,WAAWD,UAAU,4BACnF,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,gBACX,4BAAK/B,GACJK,GAAS,uBAAGyC,aAAW,cAAczC,IAEzCD,GAAO,uBAAG2B,UAAU,cAAce,aAAW,YAAY1C,IAE9D,wBAAI2B,UAAU,kBACV,4BAAI,yCAAJ,IAAsB,0BAAMe,aAAW,kBAAkB5C,GAAwB,IACjF,4BAAI,uCAAJ,IAAoB,0BAAM4C,aAAW,kBAAkB3C,GAAwB,U,GAnB1EqC,IAAMC,YCkChBM,G,6KAhCD,IAAD,EAC8DpE,KAAKwC,MAAMZ,KAAtEC,EADH,EACGA,KAAMC,EADT,EACSA,YAAaC,EADtB,EACsBA,iBAAkBC,EADxC,EACwCA,SAAUC,EADlD,EACkDA,QAEvD,OACI,yBAAKmB,UAAU,8BAA8BC,cAAY,aACrD,yBAAKD,UAAU,2BACX,4BACI,uBAAGiB,KAAMpC,GAAoB,IAAKW,OAAO,SAAS0B,IAAI,sBAAsBjB,cAAY,YACnFxB,EACD,uBAAGuB,UAAU,YAAb,iBAGPtB,GAAe,uBAAGqC,aAAW,aAAarC,IAE/C,yBAAKsB,UAAU,aACX,wBAAIA,UAAU,aACV,wBAAIA,UAAU,kBACV,uBAAGA,UAAU,YAAb,QACA,0BAAMe,aAAW,cAAcpC,GAAsC,IAEzE,wBAAIqB,UAAU,kBACV,uBAAGA,UAAU,YAAb,QACA,0BAAMe,aAAW,aAAanC,GAAsB,4B,GAxBzD6B,IAAMC,YCARS,E,uKACP,IACErD,EAAUlB,KAAKwC,MAAftB,MAEFsD,EAAetD,GACjBA,EAAMS,KAAI,SAAAC,GAAI,OAAI,kBAAC,EAAD,CAAU6C,IAAK7C,EAAKR,GAAIQ,KAAMA,OAGpD,OACI,kBAAC,IAAM8C,SAAP,KACKF,O,GAVqBX,IAAMC,WCe7Ba,G,mLAbD,IAAD,EACkC3E,KAAKwC,MAApCoC,EADH,EACGA,KAAMC,EADT,EACSA,KAAMC,EADf,EACeA,eACpB,OACI,4BAAQ1B,UAAU,gCACdC,cAAY,eAAeO,QAASkB,GACnCF,GAAS,uBAAGxB,UAAU,WAAWC,cAAY,qBAAqBuB,GACnE,0BAAMvB,cAAY,qBAAqBwB,Q,GAP1BhB,IAAMC,YCiBpBiB,G,6KAfD,IAAD,EAC8C/E,KAAKwC,MAAhDtB,EADH,EACGA,MAAO8D,EADV,EACUA,OAAQC,EADlB,EACkBA,wBACvB,OACI,yBAAK7B,UAAU,sBAAsBC,cAAY,mBAC7C,yBAAKD,UAAU,oBACX,+CACClC,GAAS,kBAAC,EAAD,CAAgB0D,KAAMI,EAAOJ,KAAMC,KAAMG,EAAOH,KAAMC,eAAgBG,KAEnF/D,GAAS,kBAAC,EAAD,CAAUA,MAAOA,KACzBA,GAAS,uBAAGmC,cAAY,WAAf,8B,GAVMQ,IAAMqB,gBCkExBC,E,kDA/Db,WAAY3C,GAAQ,IAAD,8BACjB,cAAMA,IAeRU,cAAgB,SAACkC,GACfA,EAAcC,MAAK,SAAAC,GACf,EAAKzC,SAAS,CACZ1B,KAAMmE,EAASnE,KACfD,MAAM,YAAKoE,EAASpE,YAGvBqE,OAAM,SAAAC,GACL,EAAK3C,SAAS,CAAE1B,KAAM,KAAMD,MAAO,WAxBtB,EA+BnBuE,iBAAmB,WAAO,IAAD,EACG,EAAK1C,MAAvBiC,EADe,EACfA,OAAQ9D,EADO,EACPA,MAEVwE,EAA8B,QAAjBV,EAAOW,MACxB,CAAEA,MAAO,OAAQf,KAAM,eAAgBC,KAAM,kBAC7C,CAAEc,MAAO,MAAOf,KAAM,iBAAkBC,KAAM,iBAE1Ce,EAAgC,QAApBF,EAAUC,MACzB,YAAIzE,GAAOgB,MAAK,SAACpB,EAAGqB,GAAJ,OAAWrB,EAAEiB,iBAAmBI,EAAEJ,iBAAoB,GAAK,KAC3E,YAAIb,GAAOgB,MAAK,SAACpB,EAAGqB,GAAJ,OAAWrB,EAAEiB,iBAAmBI,EAAEJ,iBAAoB,GAAK,KAE9E,EAAKc,SAAS,CAAEmC,OAAQU,EAAWxE,MAAO0E,KAxC1C,EAAK7C,MAAQ,CACX5B,KAAM,KACND,MAAO,KACP8D,OAAQ,CACNW,MAAO,MACPf,KAAM,iBACNC,KAAM,kBARO,E,qDA8CT,IAAD,EACyB7E,KAAK+C,MAA7B5B,EADD,EACCA,KAAMD,EADP,EACOA,MAAO8D,EADd,EACcA,OAErB,OACE,yBAAK5B,UAAU,aACb,4BAAQA,UAAU,2BAChB,kBAAC,EAAD,CAAgBF,cAAelD,KAAKkD,gBACnC/B,GAAQ,kBAAC,EAAD,CAAYA,KAAMA,KAE7B,0BAAMiC,UAAU,0BACd,kBAAC,EAAD,CAAoBlC,MAAOA,EAAO8D,OAAQA,EAAQC,wBAAyBjF,KAAKyF,yB,GA1DxE5B,IAAMC,WCDxB+B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.a6ce3f92.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport class GitHubRepository {\r\n\r\n    constructor() {\r\n        this.http = axios.create({\r\n            baseURL: 'https://api.github.com/',\r\n            timeout: 10000,\r\n            headers: { 'Content-Type': 'application/json' }\r\n        });\r\n    }\r\n\r\n    getUser(username) {\r\n        return this.http.get(`users/${username}`);\r\n    }\r\n   \r\n    getReposByUser(username) {\r\n        return this.http.get(`users/${username}/repos`);\r\n    }\r\n\r\n}\r\n\r\nexport default GitHubRepository;","import GitHubRepository from '../repository/GithubRepository'\r\n\r\nclass GitHubService {\r\n\r\n    constructor() {\r\n        this.repository = new GitHubRepository();\r\n    }\r\n\r\n    async getUser(username) {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                const { data } = await this.repository.getUser(username);\r\n                const repos = await this.getReposByUser(username);\r\n                resolve({\r\n                    user: {\r\n                        id: data.id,\r\n                        login: data.login,\r\n                        avatar_url: data.avatar_url,\r\n                        followers: data.followers,\r\n                        following: data.following,\r\n                        bio: data.bio,\r\n                        email: data.email,\r\n                    },\r\n                    repos: repos\r\n                });\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    async getReposByUser(username) {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                const { data } = await this.repository.getReposByUser(username);\r\n\r\n                const repos = data.map(repo => {\r\n                    return {\r\n                        id: repo.id,\r\n                        name: repo.name,\r\n                        description: repo.description,\r\n                        stargazers_count: repo.stargazers_count,\r\n                        language: repo.language,\r\n                        svn_url: repo.svn_url,\r\n                    }\r\n                }).sort((a, b) => {\r\n                    return (a.stargazers_count < b.stargazers_count) ? 1 : -1\r\n                });\r\n\r\n                resolve(repos);\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    validateUsername(username) {\r\n        const reg = /^[a-z\\d](?:[a-z\\d]|-(?=[a-z\\d])){0,38}$/i\r\n        const valid = reg.test(username);\r\n        let error = null;\r\n\r\n        if (!valid) {\r\n            if (!username) {\r\n                error = 'Informe um usuário';\r\n            } else if (username.length > 39) {\r\n                error = 'O nome de usuário pode ter no máximo 39 caracteres.';\r\n            } else if (username[0] === '-') {\r\n                error = 'O nome de usuário não pode começar com hífem.';\r\n            } else {\r\n                error = 'O nome de usuário não pode conter caracteres especiais.';\r\n            }\r\n        }\r\n\r\n        return error;\r\n    }\r\n\r\n}\r\n\r\nexport default GitHubService","import React from 'react'\r\nimport './user-search-form.css'\r\nimport GitHubService from '../../service/GithubService'\r\n\r\nclass UserSearchForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            user: null,\r\n            error: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.service = new GitHubService();\r\n    }\r\n\r\n    onChangeHandler = (event) => {\r\n        const { value } = event.target;\r\n        this.setState({ username: value });\r\n    }\r\n\r\n    onSubmitHandler = (event) => {\r\n        const { username } = this.state;\r\n        const error = this.service.validateUsername(username);\r\n\r\n        if (!error) {\r\n            this.props.onUserChanged(this.service.getUser(username));\r\n        }\r\n\r\n        this.setState({ error: error });\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        const { error } = this.state;\r\n        return (\r\n            <div className=\"form-container\" data-testid=\"form-container\">\r\n                <form onSubmit={this.onSubmitHandler}>\r\n                    <div className=\"input-group\">\r\n                        <input name=\"userSearch\" placeholder=\"Usuário\" className=\"form-input\"\r\n                            minLength=\"3\" maxLength=\"39\" data-testid=\"user-search-input\"\r\n                            onChange={this.onChangeHandler} />\r\n                        <button type=\"submit\" className=\"mat-icon\" data-testid=\"user-search-bt\"\r\n                            onClick={this.onSubmitHandler}>\r\n                            search\r\n                        </button>\r\n                    </div>\r\n                    {error && <small className=\"error\" data-testid=\"search-error\">{error}</small>}\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserSearchForm\r\n","import React from 'react';\r\nimport './header-user.css'\r\n\r\nclass HeaderUser extends React.Component {\r\n\r\n    render() {\r\n        const { login, avatar_url, followers, following, bio, email } = this.props.user;\r\n\r\n        const imgAlt = `Foto de perfil do usuário ${login}`\r\n\r\n        return (\r\n            <div className=\"container profile-container\">\r\n                {avatar_url && <img src={avatar_url} alt={imgAlt} data-testid=\"user-img\" className=\"header-img elevation-z4\" />}\r\n                <div className=\"profile-header\">\r\n                    <div className=\"profile-user\">\r\n                        <h1>{login}</h1>\r\n                        {email && <p aria-label=\"user-email\">{email}</p>}\r\n                    </div>\r\n                    {bio && <p className=\"profile-bio\" aria-label=\"user-bio\">{bio}</p>}\r\n                </div>\r\n                <ul className=\"profile-status\">\r\n                    <li><b>Seguidores</b> <span aria-label=\"user-followers\">{followers ? followers : 0}</span></li>\r\n                    <li><b>Seguindo</b> <span aria-label=\"user-following\">{following ? following : 0}</span></li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default HeaderUser\r\n","import React from 'react';\r\nimport './card-repo.css'\r\n\r\nclass CardRepo extends React.Component {\r\n\r\n    render() {\r\n        const { name, description, stargazers_count, language, svn_url } = this.props.repo;\r\n\r\n        return (\r\n            <div className=\"card card-repo elevation-z4\" data-testid=\"card-repo\">\r\n                <div className=\"card-header repo-header\">\r\n                    <h1>\r\n                        <a href={svn_url ? svn_url : '#'} target=\"_blank\" rel=\"noopener noreferrer\" data-testid=\"repo-url\" >\r\n                            {name}\r\n                            <i className=\"mat-icon\">open_in_new</i>\r\n                        </a>\r\n                    </h1>\r\n                    {description && <p aria-label=\"repo-desc\">{description}</p>}\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <ul className=\"repo-info\">\r\n                        <li className=\"repo-info-item\">\r\n                            <i className=\"mat-icon\">star</i>\r\n                            <span aria-label=\"repo-stars\">{stargazers_count ? stargazers_count : 0}</span>\r\n                        </li>\r\n                        <li className=\"repo-info-item\">\r\n                            <i className=\"mat-icon\">code</i>\r\n                            <span aria-label=\"repo-lang\">{language ? language : 'Não informado'}</span>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default CardRepo\r\n","import React from 'react'\r\nimport CardRepo from '../card-repo/CardRepo'\r\n\r\nexport default class RepoList extends React.Component {\r\n    render() {\r\n        const { repos } = this.props;\r\n\r\n        const cardRepoList = repos && (\r\n            repos.map(repo => <CardRepo key={repo.id} repo={repo} />)\r\n        )\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {cardRepoList}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport './floating-button.css';\r\nimport '../button.css';\r\n\r\nclass FloatingButton extends React.Component {\r\n    render() {\r\n        const { icon, text, onClickHandler } = this.props;\r\n        return (\r\n            <button className=\"btn btn-floating elevation-z8\"\r\n                data-testid=\"btn-floating\" onClick={onClickHandler}>\r\n                {icon && (<i className=\"mat-icon\" data-testid=\"btn-floating-icon\">{icon}</i>)}\r\n                <span data-testid=\"btn-floating-text\">{text}</span>\r\n            </button>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default FloatingButton;","import React from 'react'\r\nimport RepoList from '../RepoList'\r\nimport FloatingButton from '../../utils/button/floating-button/FloatingButton'\r\nimport './repo-list-controller.css';\r\n\r\nclass RepoListController extends React.PureComponent {\r\n    render() {\r\n        const { repos, filter, changeOrdenationHandler } = this.props;\r\n        return (\r\n            <div className=\"container repo-list\" data-testid=\"list-controller\">\r\n                <div className=\"repo-list-header\">\r\n                    <h1>Repositórios</h1>\r\n                    {repos && <FloatingButton icon={filter.icon} text={filter.text} onClickHandler={changeOrdenationHandler} />}\r\n                </div>\r\n                {repos && <RepoList repos={repos} />}\r\n                {!repos && <p data-testid=\"no-repo\">Nenhum Repositório</p>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RepoListController","import React from 'react';\r\nimport UserSearchForm from './components/user-search-form/UserSearchForm'\r\nimport HeaderUser from './components/header-user/HeaderUser'\r\nimport RepoListController from './components/repo-list/repo-list-controller/RepoListController'\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      user: null,\r\n      repos: null,\r\n      filter: {\r\n        order: 'asc',\r\n        icon: 'arrow_downward',\r\n        text: 'Mais estrelas'\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Atualiza state para corresponder ao novo usuário buscado\r\n   */\r\n  onUserChanged = (gitHubPromise) => {\r\n    gitHubPromise.then(response => {\r\n        this.setState({\r\n          user: response.user,\r\n          repos: [...response.repos]\r\n        });\r\n      })\r\n      .catch(e => {\r\n        this.setState({ user: null, repos: null });\r\n      });\r\n  }\r\n\r\n  /**\r\n   *  Reordena a lista de repositórios do usuário por numero de estrelas\r\n   */\r\n  changeOrdenation = () => {\r\n    const { filter, repos } = this.state;\r\n\r\n    const newFilter = (filter.order === 'asc') ?\r\n      { order: 'desc', icon: 'arrow_upward', text: 'Menos estrelas' } :\r\n      { order: 'asc', icon: 'arrow_downward', text: 'Mais estrelas' };\r\n\r\n    const newRepos = (newFilter.order === 'asc') ?\r\n      ([...repos].sort((a, b) => (a.stargazers_count < b.stargazers_count) ? 1 : -1)) :\r\n      ([...repos].sort((a, b) => (a.stargazers_count > b.stargazers_count) ? 1 : -1));\r\n\r\n    this.setState({ filter: newFilter, repos: newRepos });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { user, repos, filter } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"container navbar-search\">\r\n          <UserSearchForm onUserChanged={this.onUserChanged} />\r\n          {user && <HeaderUser user={user} />}\r\n        </header>\r\n        <main className=\"container elevation-z8\">\r\n          <RepoListController repos={repos} filter={filter} changeOrdenationHandler={this.changeOrdenation} />\r\n        </main>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}